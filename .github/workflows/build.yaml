name: Build and Publish

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    #branches: [ main ]
    tags: 'v*'
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version:'
        required: true
        default: '13.4.3'
        type: string
      buildNumber:
        description: 'Build number:'
        required: true
        default: 1
        type: number

# Permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  AWS_ACCOUNT_ID: "243046121444"
  AWS_REGION: "eu-west-1"
  AWS_ROLE: "GHA-tdns-server"
  BUILD_NUMBER: 1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on (could be specific, i.e. ubuntu-22.04)
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        name: Checkout packaging repo

      - name: Get TAG
        run : |
          echo ${{ github.event.release.tag_name }}
          echo ${{ github.event.ref }}
          echo ${GITHUB_REF/refs\/tags\/v/}
          echo ${GITHUB_REF#refs/tags/v}
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Make package
        env:
          VERSION: ${{ github.event.inputs.version || env.VERSION }}
        run: |
          echo "Building ${{ github.event.inputs.version || env.VERSION }}-${{ github.event.inputs.buildNumber }}"
          #exit 1
          BUILD_NUMBER=${{ github.event.inputs.buildNumber || env.BUILD_NUMBER }} make package
          #exit 1

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: pkg/*.rpm
          retention-days: 5

  deploy:
    needs: build
    if: success()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout release repo
        with:
          ref: 'main'
          #fetch-depth: '0'
          #lfs: true
          #path: 'repo'

      - uses: actions/download-artifact@v4
        with:
          name: rpm-package
          path: pkg/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE }}
          role-session-name: GitHub_Action_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Download files from S3 with AWS CLI
        if: success()
        run: |
          mkdir -p rpm/releases/noarch/
          aws s3 sync s3://tdns-server rpm/

      - name: Generate Yum repo
        run: |
          sudo apt install createrepo-c
          #cd repo/
          #git lfs install
          #git lfs track "*.rpm"
          #mkdir -p rpm/releases/x86_64/
          cp -a ./pkg/*.rpm rpm/releases/noarch/
          createrepo_c rpm/releases/noarch/
          #git add .
          #git config --global user.name 'GHA'
          #git config --global user.email 'mbevc1@users.noreply.github.com'
          #git commit -am "Automated commit"
          #git push

      - name: Upload files to S3 with AWS CLI
        run: |
          aws s3 sync rpm/ s3://tdns-server
